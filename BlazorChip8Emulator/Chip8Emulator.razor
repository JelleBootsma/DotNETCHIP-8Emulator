@using Blazor.Extensions
@using Chip8EmulationCore.IO
@using Chip8EmulationCore
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.JSInterop
@inject IJSRuntime JsRuntime

<div tabindex="0" class="focusDiv" @ref="_focusDiv" @onkeydown="_keyPad.RegisterKeyDown" @onkeyup="_keyPad.RegisterKeyUp">
    <BECanvas Width="640" Height="320" @ref="_canvasRef" />

</div>

@code{
    [Parameter]
    public byte[]? RomData { get; set; }

    private BECanvasComponent? _canvasRef = null!;
    private CanvasDisplay _display = null!;
    private ElementReference _focusDiv;
    private BlazorKeyPad _keyPad = new();
    private ISoundHandler _soundHandler = new NoSoundHandler();
    private Cpu _core = null!;
    private Task? _runningEmulatorTask;
    private CancellationTokenSource? _runningEmulatorCancellationSource;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if (_display is null)
            return;
        await LoadRomAndStartEmulator();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (!firstRender || _canvasRef is null)
            return;
        var context = await _canvasRef.CreateCanvas2DAsync();
        _display = new CanvasDisplay(_canvasRef, context);


        await LoadRomAndStartEmulator();
    }


    private async Task LoadRomAndStartEmulator()
    {
        // Cancel the runnning emulator (if there is an emulator running)
        if (_runningEmulatorCancellationSource is not null)
            _runningEmulatorCancellationSource.Cancel();

        _core = new Cpu(_display, _soundHandler, _keyPad);
        _display.Clear();
        _soundHandler.StopSound();

        //
        _core.LoadRom(RomData);
        _runningEmulatorCancellationSource = new();

        // Run the emulator on a background thread
        _runningEmulatorTask = Task.Run(
            async () =>
            {
                try
                {
                    await _core.StartEmulator(_runningEmulatorCancellationSource.Token);
                }
                catch (Exception e)
                {
                    Console.WriteLine(e.ToString());
                }
            });

        // Keep focus on the correct div
        await _focusDiv.FocusAsync();
    }
}